// Lab_5.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>
#include <string.h>
#include <string.h>

using namespace std;

#define MAX_NAME_LEN 30

class BankAccount {
private:
	char name[MAX_NAME_LEN];
	int  account_number;
	double balance;
public:
	BankAccount();
	BankAccount(char*);
	BankAccount(char*, int, double);
	void printSummary();
	double withdraw(double);
	void deposit(double);
	double getBalance();
};


class SaveBankAccount : public BankAccount {
	private:
		double interestRate;
		int MAXnoWithDraws;
		int noWithDraws;
	
public:
		SaveBankAccount(char *, int, double, double, int);       //name, account_number,balance , intersetRate, MaxnoWithDraws, NoWithDraws = 0
		void printSummary();
};


int main(void) {
		char nTom[] = "Tom";

		SaveBankAccount TomAcc(nTom, 234567, 2000, 0.05, 1);  //Part 3

	TomAcc.printSummary();
	
	
	
	TomAcc.withdraw(500);
	
	cout << "---------------------" << endl;
	cout << "Balance is: " << TomAcc.getBalance() << endl;
	cout << "---------------------" << endl;

	return 0;
}

/*---------------------------------------Methods-----------------------------------------*/


BankAccount::BankAccount() {
	name[0] = 0;
	account_number = 0;
	balance = 0;
}

BankAccount::BankAccount(char *n) {
	strcpy_s(name, n);
	account_number = 0;
	balance = 0;
}


BankAccount::BankAccount(char *n, int acc_num, double amount) {
	strcpy_s(name, n);
	account_number = acc_num;
	balance = amount;
}

void BankAccount::printSummary() {
	cout << "---------------------------" << endl;
	cout << "Account Name:" << name << endl;
	cout << "Account Number:" << account_number << endl;
	cout << "Balance" << balance << endl;
	cout << "---------------------------" << endl;
	}

void SaveBankAccount::printSummary() {
	cout << "---------------------------" << endl;
	BankAccount::printSummary();
	cout << "Interest Rate:" << interestRate << endl;
	cout << "Maximum Number of Withdraws::" << MAXnoWithDraws << endl;
	cout << "Number of Withdraws:" << noWithDraws << endl;
	cout << "---------------------------" << endl;
}


double BankAccount::withdraw(double amnt_wtdrwn) {
	if (balance >= amnt_wtdrwn) {
		balance -= amnt_wtdrwn;
	}
	else {
		cout << "Insufficent Funds" << endl;
		return 0;
	}

	return amnt_wtdrwn;
}

void BankAccount::deposit(double amnt_dpst) {
	balance += amnt_dpst;
	}

double BankAccount::getBalance() {
		return balance;

}		

SaveBankAccount::SaveBankAccount(char*n, int acc_num, double amount, double IR, int MxWd):BankAccount( n, acc_num,  amount) {
	
	 interestRate = IR;
	 MAXnoWithDraws = MxWd ;
	 noWithDraws = 0;

}




// Run program: Ctrl + F5 or Debug > Start Without Debugging menu
// Debug program: F5 or Debug > Start Debugging menu

// Tips for Getting Started: 
//   1. Use the Solution Explorer window to add/manage files
//   2. Use the Team Explorer window to connect to source control
//   3. Use the Output window to see build output and other messages
//   4. Use the Error List window to view errors
//   5. Go to Project > Add New Item to create new code files, or Project > Add Existing Item to add existing code files to the project
//   6. In the future, to open this project again, go to File > Open > Project and select the .sln file

